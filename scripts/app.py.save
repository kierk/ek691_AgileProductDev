from flask import Flask, Response, render_template, redirect, url_for
#from energenie import switch_on, switch_off
import subprocess
from flask.ext.login import LoginManager, UserMixin, login_required

app = Flask(__name__)
login_manager = LoginManager()
login_manager.init_app(app)

#---------------------------------------------------------
#  Login Classes
#---------------------------------------------------------

class User(UserMixin):
    # proxy for a database of users
    user_database = {"root": ("root", "root"),
               "JaneDoe": ("JaneDoe", "Jane")}

    def __init__(self, username, password):
        self.id = username
        self.password = password

    @classmethod
    def get(cls,id):
        return cls.user_database.get(id)



@login_manager.request_loader
def load_user(request):
    token = request.headers.get('Authorization')
    if token is None:
        token = request.args.get('token')

    if token is not None:
        username,password = token.split(":") # naive token
        user_entry = User.get(username)
        if (user_entry is not None):
            user = User(user_entry[0],user_entry[1])
            if (user.password == password):
                return user
    return None


#---------------------------------------------------------
#  Routing
#---------------------------------------------------------
app.config["SECRET_KEY"] = "ITSASECRET"


@app.route('/',methods=["GET"])
@login_required
def index():
    return render_template('index.html')

@app.route('/on/')
def on():
    print "Opening Door From Authenticated"
    # Uncomment to run Script
    # subprocess.Popen(['/usr/bin/env', 'python', 'open.py'], subprocess.PIPE)
    #app.r('/off/')
    return redirect(url_for('index'))

@app.route('/off/')
def off():
    #switch_off()
    return render_template('index.html')

if __name__ == '__main__':
    app.config["SECRET_KEY"] = "ITSASECRET"
    app.run(debug=True, host='0.0.0.0', port=80)
